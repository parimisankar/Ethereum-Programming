# Create a project directory
mkdir -p C:\Users\Jai\ethereum-programming\Training\Chainlist
cd C:\Users\Jai\ethereum-programming\Training\Chainlist

# Use truffle boxes to create a backend and frontend for smart contract
# https://github.com/chainskills/chainskills-box
truffle unbox chainskills/chainskills-box

# Launch atom from the folder
atom contracts/ChainList.sol
#############################################################
# pragma solidity ^0.4.18;
# 
# contract ChainList {
#   // state variables
#   address seller;
#   string name;
#   string description;
#   uint256 price;
# 
#   // sell an article
#   function sellArticle(string _name, string _description, uint256 _price) public {
#     seller = msg.sender; // extracting the address of the selling account and saving it to seller variable
#     name = _name;
#     description = _description;
#     price = _price;
#   }
# 
#   // get an article // doesn't cost gas
#   function getArticle () public view returns (
#     address _seller,
#     string _name,
#     string _description,
#     uint256 _price
#     ) {
#       return(seller, name, description, price);
#     }    
# }
#############################################################

atom migrations/2_deploy_contracts.js
#############################################################
# var ChainList = artifacts.require("./ChainList.sol");
# 
# module.exports = function(deployer) {
#   deployer.deploy(ChainList);
# };
#############################################################

truffle migrate --compile-all --reset --network ganache
truffle console --network ganache

# Check address of ChainList
> ChainList.address

# Check balances from truffle console
> web3.fromWei(web3.eth.getBalance(web3.eth.accounts[0]), "ether").toNumber()
> web3.fromWei(web3.eth.getBalance(web3.eth.accounts[1]), "ether").toNumber()

# Get an instance of the contract
> ChainList.deployed().then(function(instance) {app = instance});
> app.getArticle();

# Sell a phone
> app.sellArticle("iPhone 7", "Selling to buy iPhone 8", web3.toWei(3, "ether"), {from: web3.eth.accounts[1]};
> app.getArticle();

